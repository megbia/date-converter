<?php

use Carbon\Carbon;


class Ethiopic
{

    protected  $adjustment = 0;


    public static function convertToEthiopic($date, int $adjustment = null)
    {
        if (! $date instanceof Carbon)
        {
            $date = new Carbon($date);
        }

        return static::toEthiopic($date, static::getAdjustment($adjustment));
    }


    public static function convertToGregorian(int $day, int $month, int $year, int $adjustment = null)
    {
        return static::toGregorian($day, $month, $year, static::getAdjustment($adjustment));
    }


    protected static function toEthiopic(Carbon $date, int $adjustment = 0)
    {
        $adjusted = (new Carbon($date))->addDays($adjustment);

        $jd = Converter::gregorianToJulian($adjusted->year, $adjusted->month, $adjusted->day);
        $ethiopic = Converter::julianToEthiopic($jd);

        return new Date($ethiopic->day, $ethiopic->month, $ethiopic->year, $jd, clone $date, $adjustment);
    }

    protected static function toGregorian(int $day, int $month, int $year, int $adjustment = 0)
    {
        $jd = Converter::ethiopicToJulian($year, $month, $day);

        $date = Converter::julianToGregorian($jd);

        return (new Carbon("{$date->year}-{$date->month}-{$date->day}"))->addDays(-1 * $adjustment);
    }


    public static function getDefaultAdjustment()
    {
        return static::$adjustment;
    }

    public static function setDefaultAdjustment(int $adjustment)
    {
        static::$adjustment = $adjustment;
    }

 
    protected static function getAdjustment(int $adjustment = null)
    {
        return $adjustment === null ? static::getDefaultAdjustment() : $adjustment;
    }
}


